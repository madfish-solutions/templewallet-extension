name: Code quality

on:
  pull_request:
    branches:
      - master
      - development
      - 'TW-[0-9]+-epic-**'

jobs:
  pull-request-check:
    name: Checks if ts, lint, tests & build work
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Repo setup
        uses: ./.github/workflows/repo-setup

      - name: Secrets setup
        uses: ./.github/workflows/secrets-setup
        with:
          GITHUB_ACTION_RUN_ENV: development
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          TEMPLE_WALLET_JITSU_TRACKING_HOST: ${{ vars.TEMPLE_WALLET_JITSU_TRACKING_HOST }}
          TEMPLE_WALLET_JITSU_WRITE_KEY: ${{ vars.TEMPLE_WALLET_JITSU_WRITE_KEY }}
          TEMPLE_WALLET_EXOLIX_API_KEY: ${{ secrets.TEMPLE_WALLET_EXOLIX_API_KEY }}
          TEMPLE_WALLET_EVERSTAKE_API_KEY: ${{ secrets.TEMPLE_WALLET_EVERSTAKE_API_KEY }}
          TEMPLE_WALLET_EVERSTAKE_LINK_ID: ${{ secrets.TEMPLE_WALLET_EVERSTAKE_LINK_ID }}
          TEMPLE_WALLET_UTORG_SID: ${{ secrets.TEMPLE_WALLET_UTORG_SID }}
          TEMPLE_WALLET_API_URL: ${{ vars.TEMPLE_WALLET_API_URL }}
          TEMPLE_WALLET_DEXES_API_URL: ${{ vars.TEMPLE_WALLET_DEXES_API_URL }}
          TEMPLE_ADS_API_URL: ${{ vars.TEMPLE_ADS_API_URL }}
          TEMPLE_WALLET_ROUTE3_AUTH_TOKEN: ${{ vars.TEMPLE_WALLET_ROUTE3_AUTH_TOKEN }}
          TEMPLE_WALLET_MOONPAY_API_KEY: ${{ secrets.TEMPLE_WALLET_MOONPAY_API_KEY }}
          TEMPLE_FIREBASE_CONFIG: ${{ secrets.TEMPLE_FIREBASE_CONFIG }}
          TEMPLE_FIREBASE_MESSAGING_VAPID_KEY: ${{ secrets.TEMPLE_FIREBASE_MESSAGING_VAPID_KEY }}
          HYPELAB_API_URL: ${{ vars.HYPELAB_API_URL }}
          HYPELAB_SMALL_PLACEMENT_SLUG: ${{ vars.HYPELAB_SMALL_PLACEMENT_SLUG }}
          HYPELAB_HIGH_PLACEMENT_SLUG: ${{ vars.HYPELAB_HIGH_PLACEMENT_SLUG }}
          HYPELAB_WIDE_PLACEMENT_SLUG: ${{ vars.HYPELAB_WIDE_PLACEMENT_SLUG }}
          HYPELAB_NATIVE_PLACEMENT_SLUG: ${{ vars.HYPELAB_NATIVE_PLACEMENT_SLUG }}
          HYPELAB_PROPERTY_SLUG: ${{ vars.HYPELAB_PROPERTY_SLUG }}
          HYPELAB_ADS_WINDOW_URL: ${{ vars.HYPELAB_ADS_WINDOW_URL }}
          PERSONA_ADS_API_KEY: ${{ vars.PERSONA_ADS_API_KEY }}
          PERSONA_ADS_BANNER_UNIT_ID: ${{ vars.PERSONA_ADS_BANNER_UNIT_ID }}
          PERSONA_ADS_WIDE_BANNER_UNIT_ID: ${{ vars.PERSONA_ADS_WIDE_BANNER_UNIT_ID }}
          PERSONA_ADS_MEDIUM_BANNER_UNIT_ID: ${{ vars.PERSONA_ADS_MEDIUM_BANNER_UNIT_ID }}
          PERSONA_ADS_SQUARISH_BANNER_UNIT_ID: ${{ vars.PERSONA_ADS_SQUARISH_BANNER_UNIT_ID }}
          TEMPLE_ADS_ORIGIN_PASSPHRASE: ${{ vars.TEMPLE_ADS_ORIGIN_PASSPHRASE }}
          CONVERSION_VERIFICATION_URL: ${{ vars.CONVERSION_VERIFICATION_URL }}

      - name: Install dependencies and code quality check with private modules
        uses: ./.github/workflows/code-quality-check
        with:
          optional_modules: true

      - name: Create Chrome build
        run: yarn build:chrome

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: chrome
          path: dist/chrome.zip
          if-no-files-found: error
          retention-days: 10

      - name: Remove private modules
        run: rm -rf node_modules/@temple-wallet/extension-ads
        shell: bash

      - name: Install dependencies and code quality check without private modules
        uses: ./.github/workflows/code-quality-check
        with:
          optional_modules: false

      - name: Create Chrome core build
        run: yarn build:chrome:core

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: chrome_core
          path: dist/chrome.zip
          if-no-files-found: error
          retention-days: 10
