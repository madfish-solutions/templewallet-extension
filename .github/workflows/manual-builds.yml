name: Manual builds
run-name: Manual build of ${{ github.ref_name }} (Chrome=${{ github.event.inputs.chrome == 'true' || github.event.inputs.chromePlusE2E == 'true' }}; Firefox=${{ github.event.inputs.firefox == 'true' }}; E2E=${{ github.event.inputs.chromePlusE2E == 'true' }})

on:
  workflow_dispatch:
    inputs:
      chrome:
        type: boolean
        description: Chrome build
        required: false
      chromePlusE2E:
        type: boolean
        description: Chrome build + E2E
        required: false
      firefox:
        type: boolean
        description: Firefox build
        required: false

jobs:
  additional-builds:
    name: Creates builds for a specific browsers
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Use Node 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Secrets setup
        uses: ./.github/workflows/secrets-setup
        with:
          GITHUB_ACTION_RUN_ENV: development
          TEMPLE_WALLET_JITSU_TRACKING_HOST: ${{ vars.TEMPLE_WALLET_JITSU_TRACKING_HOST }}
          TEMPLE_WALLET_JITSU_WRITE_KEY: ${{ vars.TEMPLE_WALLET_JITSU_WRITE_KEY }}
          TEMPLE_WALLET_EXOLIX_API_KEY: ${{ secrets.TEMPLE_WALLET_EXOLIX_API_KEY }}
          TEMPLE_WALLET_EVERSTAKE_API_KEY: ${{ secrets.TEMPLE_WALLET_EVERSTAKE_API_KEY }}
          TEMPLE_WALLET_EVERSTAKE_LINK_ID: ${{ secrets.TEMPLE_WALLET_EVERSTAKE_LINK_ID }}
          TEMPLE_WALLET_UTORG_SID: ${{ secrets.TEMPLE_WALLET_UTORG_SID }}
          TEMPLE_WALLET_API_URL: ${{ vars.TEMPLE_WALLET_API_URL }}
          TEMPLE_WALLET_STATIC_API_URL: ${{ vars.TEMPLE_WALLET_STATIC_API_URL }}
          TEMPLE_WALLET_DEXES_API_URL: ${{ vars.TEMPLE_WALLET_DEXES_API_URL }}
          TEMPLE_WALLET_ROUTE3_AUTH_TOKEN: ${{ vars.TEMPLE_WALLET_ROUTE3_AUTH_TOKEN }}
          TEMPLE_WALLET_MOONPAY_API_KEY: ${{ secrets.TEMPLE_WALLET_MOONPAY_API_KEY }}
          TEMPLE_FIREBASE_CONFIG: ${{ secrets.TEMPLE_FIREBASE_CONFIG }}
          TEMPLE_FIREBASE_MESSAGING_VAPID_KEY: ${{ secrets.TEMPLE_FIREBASE_MESSAGING_VAPID_KEY }}
          # [e2e]
          DEFAULT_HD_ACCOUNT_SEED_PHRASE: ${{ secrets.DEFAULT_HD_ACCOUNT_SEED_PHRASE }}
          DEFAULT_HD_ACCOUNT_FIRST_PRIVATE_KEY: ${{ secrets.DEFAULT_HD_ACCOUNT_FIRST_PRIVATE_KEY }}
          DEFAULT_HD_ACCOUNT_FIRST_HASH_SHORT_FORM: ${{ secrets.DEFAULT_HD_ACCOUNT_FIRST_HASH_SHORT_FORM }}
          DEFAULT_HD_ACCOUNT_SECOND_PRIVATE_KEY: ${{ secrets.DEFAULT_HD_ACCOUNT_SECOND_PRIVATE_KEY }}
          DEFAULT_PASSWORD: ${{ secrets.DEFAULT_PASSWORD }}
          IMPORTED_HD_ACCOUNT_SEED_PHRASE: ${{ secrets.IMPORTED_HD_ACCOUNT_SEED_PHRASE }}
          IMPORTED_HD_ACCOUNT_FIRST_PRIVATE_KEY: ${{ secrets.IMPORTED_HD_ACCOUNT_FIRST_PRIVATE_KEY }}
          IMPORTED_HD_ACCOUNT_FIRST_HASH_SHORT_FORM: ${{ secrets.IMPORTED_HD_ACCOUNT_FIRST_HASH_SHORT_FORM }}
          WATCH_ONLY_PUBLIC_KEY_HASH: ${{ secrets.WATCH_ONLY_PUBLIC_KEY_HASH }}
          WATCH_ONLY_PUBLIC_KEY_HASH_SHORT_FORM: ${{ secrets.WATCH_ONLY_PUBLIC_KEY_HASH_SHORT_FORM }}
          CUSTOM_NETWORK_RPC_URL: ${{ secrets.CUSTOM_NETWORK_RPC_URL }}

      - name: Install dependencies and code quality
        uses: ./.github/workflows/code-quality-check

      - name: Create Chrome build
        if: ${{ github.event.inputs.chrome == 'true' || github.event.inputs.chromePlusE2E == 'true' }}
        run: yarn build:chrome

      - name: Upload Chrome artifact
        if: ${{ github.event.inputs.chrome == 'true' || github.event.inputs.chromePlusE2E == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: chrome
          path: dist/chrome.zip
          if-no-files-found: error
          retention-days: 30

      - name: Perform end-to-end tests
        if: ${{ github.event.inputs.chromePlusE2E == 'true' }}
        uses: ./.github/workflows/e2e

      - name: Upload E2E video to Slack
        if: ${{ failure() && github.event.inputs.chromePlusE2E == 'true' }}
        uses: adrey/slack-file-upload-action@master
        with:
          token: ${{ secrets.SLACK_E2E_VIDEO_UPLOADER_TOKEN }}
          path: e2e/video-rep/test-runs.mp4
          channel: temple-test-runs
          initial_comment: <https://github.com/madfish-solutions/templewallet-extension/pull/${{ github.event.number }}|${{ github.event.pull_request.title }}>  (Run <https://github.com/madfish-solutions/templewallet-extension/actions/runs/${{ github.run_id }}|â„–${{ github.run_number }}>)

      - name: Create Firefox build
        if: ${{ github.event.inputs.firefox == 'true' }}
        run: yarn build:firefox

      - name: Upload Firefox artifact
        if: ${{ github.event.inputs.firefox == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: firefox
          path: dist/firefox.xpi
          if-no-files-found: error
          retention-days: 30
